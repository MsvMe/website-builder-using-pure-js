{"id":"../node_modules/ima/execution/AbstractExecution.js","dependencies":[{"name":"/Users/hasanlimajev/Desktop/js-constructor/package.json","includedInParent":true,"mtime":1704662260098},{"name":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/package.json","includedInParent":true,"mtime":1704662257674},{"name":"../error/GenericError","loc":{"line":7,"column":28,"index":109},"parent":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/execution/AbstractExecution.js","resolved":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/error/GenericError.js"},{"name":"./Execution","loc":{"line":11,"column":25,"index":222},"parent":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/execution/AbstractExecution.js","resolved":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/execution/Execution.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GenericError = require(\"../error/GenericError\");\n\nvar _GenericError2 = _interopRequireDefault(_GenericError);\n\nvar _Execution = require(\"./Execution\");\n\nvar _Execution2 = _interopRequireDefault(_Execution);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst CLASS_REGEX = /^\\s*class\\b/;\n/**\n * Basic implementation of the {@link Execution} interface. Provides the basic\n * functionality for appending and validating jobs.\n *\n * @abstract\n * @extends Execution\n */\n\nclass AbstractExecution extends _Execution2.default {\n  constructor(jobs = []) {\n    super();\n    this._jobs = jobs.filter(this._validateJob);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  append(jobs) {\n    if (!Array.isArray(jobs)) {\n      jobs = [jobs];\n    }\n\n    this._jobs = this._jobs.concat(jobs.filter(this._validateJob));\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute() {\n    throw new _GenericError2.default('The ima.execution.AbstractExecution.execute method is abstract ' + 'and must be overridden');\n  }\n  /**\n   * Return {@code true} if the given job can be executed\n   *\n   * @protected\n   * @param {function(): Promise} job\n   * @returns {boolean}\n   */\n\n\n  _validateJob(job) {\n    if (typeof job === 'function') {\n      if (!CLASS_REGEX.test(job.toString())) {\n        return true;\n      }\n    }\n\n    if ($Debug) {\n      console.warn('ima.execution.AbstractExecution: Given job is not a callable ' + 'function therefore it will be excluded from execution.', {\n        job\n      });\n    }\n\n    return false;\n  }\n\n}\n\nexports.default = AbstractExecution;\n\ntypeof $IMA !== 'undefined' && $IMA !== null && $IMA.Loader && $IMA.Loader.register('ima/execution/AbstractExecution', [], function (_export, _context) {\n 'use strict';\n return {\n   setters: [],\n   execute: function () {\n     _export('default', exports.default);\n   }\n };\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ima/execution/AbstractExecution.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}}],"sources":{"../node_modules/ima/execution/AbstractExecution.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GenericError = require(\"../error/GenericError\");\n\nvar _GenericError2 = _interopRequireDefault(_GenericError);\n\nvar _Execution = require(\"./Execution\");\n\nvar _Execution2 = _interopRequireDefault(_Execution);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst CLASS_REGEX = /^\\s*class\\b/;\n/**\n * Basic implementation of the {@link Execution} interface. Provides the basic\n * functionality for appending and validating jobs.\n *\n * @abstract\n * @extends Execution\n */\n\nclass AbstractExecution extends _Execution2.default {\n  constructor(jobs = []) {\n    super();\n    this._jobs = jobs.filter(this._validateJob);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  append(jobs) {\n    if (!Array.isArray(jobs)) {\n      jobs = [jobs];\n    }\n\n    this._jobs = this._jobs.concat(jobs.filter(this._validateJob));\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute() {\n    throw new _GenericError2.default('The ima.execution.AbstractExecution.execute method is abstract ' + 'and must be overridden');\n  }\n  /**\n   * Return {@code true} if the given job can be executed\n   *\n   * @protected\n   * @param {function(): Promise} job\n   * @returns {boolean}\n   */\n\n\n  _validateJob(job) {\n    if (typeof job === 'function') {\n      if (!CLASS_REGEX.test(job.toString())) {\n        return true;\n      }\n    }\n\n    if ($Debug) {\n      console.warn('ima.execution.AbstractExecution: Given job is not a callable ' + 'function therefore it will be excluded from execution.', {\n        job\n      });\n    }\n\n    return false;\n  }\n\n}\n\nexports.default = AbstractExecution;\n\ntypeof $IMA !== 'undefined' && $IMA !== null && $IMA.Loader && $IMA.Loader.register('ima/execution/AbstractExecution', [], function (_export, _context) {\n 'use strict';\n return {\n   setters: [],\n   execute: function () {\n     _export('default', exports.default);\n   }\n };\n});\n"},"lineCount":89}},"error":null,"hash":"7081f28274b92e0ef369ee1082e9b094","cacheData":{"env":{}}}