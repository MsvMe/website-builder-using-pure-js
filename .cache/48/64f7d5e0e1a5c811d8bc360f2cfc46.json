{"id":"../node_modules/ima/http/HttpProxy.js","dependencies":[{"name":"/Users/hasanlimajev/Desktop/js-constructor/package.json","includedInParent":true,"mtime":1704662260098},{"name":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/package.json","includedInParent":true,"mtime":1704662257674},{"name":"./StatusCode","loc":{"line":7,"column":26,"index":107},"parent":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/http/HttpProxy.js","resolved":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/http/StatusCode.js"},{"name":"../error/GenericError","loc":{"line":11,"column":28,"index":210},"parent":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/http/HttpProxy.js","resolved":"/Users/hasanlimajev/Desktop/js-constructor/node_modules/ima/error/GenericError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _StatusCode = require(\"./StatusCode\");\n\nvar _StatusCode2 = _interopRequireDefault(_StatusCode);\n\nvar _GenericError = require(\"../error/GenericError\");\n\nvar _GenericError2 = _interopRequireDefault(_GenericError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An object representing the complete request parameters used to create and\n * send the HTTP request.\n * @typedef {Object} HttpProxy~RequestParams\n * @property {string} method The HTTP method.\n * @property {string} url The original URL to which to make the request.\n * @property {string} transformedUrl The actual URL to which to make the\n *           request, created by applying the URL transformer to the\n *           original URL.\n * @property {Object<string, (boolean|number|string|Date)>} data The request\n *           data, sent as query or body.\n * @property {HttpAgent~RequestOptions} options The high-level request options\n *           provided by the HTTP agent.\n */\n\n/**\n * An object that describes a failed HTTP request, providing\n * information about both the failure reported by the server and how the\n * request has been sent to the server.\n * @typedef {Object} HttpProxy~ErrorParams\n * @property {string} errorName An error name.\n * @property {number} status The HTTP response status code send by the\n *           server.\n * @property {object} body The body of HTTP error response (detailed\n *           information).\n * @property {Error} cause The low-level cause error.\n * @property {HttpProxy~RequestParams} params An object representing the\n *           complete request parameters used to create and send the HTTP\n *           request.\n */\n\n/**\n * Middleware proxy between {@link HttpAgent} implementations and the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API Fetch API},\n * providing a Promise-oriented API for sending requests.\n */\nclass HttpProxy {\n  /**\n   * Initializes the HTTP proxy.\n   *\n   * @param {UrlTransformer} transformer A transformer of URLs to which\n   *        requests are made.\n   * @param {Window} window Helper for manipulating the global object `window`\n   *        regardless of the client/server-side environment.\n   */\n  constructor(transformer, window) {\n    /**\n     * A transformer of URLs to which requests are made.\n     *\n     * @type {UrlTransformer}\n     */\n    this._transformer = transformer;\n    /**\n     * Helper for manipulating the global object `window` regardless of the\n     * client/server-side environment.\n     *\n     * @type {Window}\n     */\n\n    this._window = window;\n    /**\n     * The default HTTP headers to include with the HTTP requests, unless\n     * overridden.\n     *\n     * @type {Map<string, string>}\n     */\n\n    this._defaultHeaders = new Map();\n  }\n  /**\n   * Executes a HTTP request to the specified URL using the specified HTTP\n   * method, carrying the provided data.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {string} url The URL to which the request should be made.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to\n   *        be send to the server. The data will be included as query\n   *        parameters if the request method is `GET` or `HEAD`, and as\n   *        a request body for any other request method.\n   * @param {HttpAgent~RequestOptions=} options Optional request options.\n   * @return {Promise.<HttpAgent~Response>} A promise that resolves to the server\n   *         response.\n   */\n\n\n  request(method, url, data, options) {\n    const requestParams = this._composeRequestParams(method, url, data, options);\n\n    return new Promise((resolve, reject) => {\n      let requestTimeoutId;\n\n      if (options.timeout) {\n        requestTimeoutId = setTimeout(() => {\n          reject(new _GenericError2.default('The HTTP request timed out', {\n            status: _StatusCode2.default.TIMEOUT\n          }));\n        }, options.timeout);\n      }\n\n      const fetch = this._getFetchApi();\n\n      fetch(this._composeRequestUrl(url, !this._shouldRequestHaveBody(method, data) ? data : {}), this._composeRequestInit(method, data, options)).then(response => {\n        if (requestTimeoutId) {\n          clearTimeout(requestTimeoutId);\n        }\n\n        const contentType = response.headers.get('content-type');\n\n        if (response.status === _StatusCode2.default.NO_CONTENT) {\n          return Promise.resolve([response, null]);\n        } else if (contentType && contentType.includes('application/json')) {\n          return response.json().then(body => [response, body]);\n        } else {\n          return response.text().then(body => [response, body]);\n        }\n      }).then(([response, responseBody]) => this._processResponse(requestParams, response, responseBody)).then(resolve, reject);\n    }).catch(fetchError => {\n      throw this._processError(fetchError, requestParams);\n    });\n  }\n  /**\n   * Sets the specified default HTTP header. The header will be sent with all\n   * subsequent HTTP requests unless reconfigured using this method,\n   * overridden by request options, or cleared by\n   * {@link HttpProxy#clearDefaultHeaders} method.\n   *\n   * @param {string} header A header name.\n   * @param {string} value A header value.\n   */\n\n\n  setDefaultHeader(header, value) {\n    this._defaultHeaders.set(header, value);\n  }\n  /**\n   * Clears all defaults headers sent with all requests.\n   */\n\n\n  clearDefaultHeaders() {\n    this._defaultHeaders.clear();\n  }\n  /**\n   * Gets an object that describes a failed HTTP request, providing\n   * information about both the failure reported by the server and how the\n   * request has been sent to the server.\n   *\n   * @param {string} method The HTTP method used to make the request.\n   * @param {string} url The URL to which the request has been made.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data sent\n   *        with the request.\n   * @param {HttpAgent~RequestOptions} options Optional request options.\n   * @param {number} status The HTTP response status code send by the server.\n   * @param {object} body The body of HTTP error response (detailed\n   *        information).\n   * @param {Error} cause The low-level cause error.\n   * @return {HttpProxy~ErrorParams} An object containing both the details of\n   *         the error and the request that lead to it.\n   */\n\n\n  getErrorParams(method, url, data, options, status, body, cause) {\n    let params = this._composeRequestParams(method, url, data, options);\n\n    if (typeof body === 'undefined') {\n      body = {};\n    }\n\n    let error = {\n      status,\n      body,\n      cause\n    };\n\n    switch (status) {\n      case _StatusCode2.default.TIMEOUT:\n        error.errorName = 'Timeout';\n        break;\n\n      case _StatusCode2.default.BAD_REQUEST:\n        error.errorName = 'Bad Request';\n        break;\n\n      case _StatusCode2.default.UNAUTHORIZED:\n        error.errorName = 'Unauthorized';\n        break;\n\n      case _StatusCode2.default.FORBIDDEN:\n        error.errorName = 'Forbidden';\n        break;\n\n      case _StatusCode2.default.NOT_FOUND:\n        error.errorName = 'Not Found';\n        break;\n\n      case _StatusCode2.default.SERVER_ERROR:\n        error.errorName = 'Internal Server Error';\n        break;\n\n      default:\n        error.errorName = 'Unknown';\n        break;\n    }\n\n    return Object.assign(error, params);\n  }\n  /**\n   * Returns `true` if cookies have to be processed manually by setting\n   * `Cookie` HTTP header on requests and parsing the `Set-Cookie` HTTP\n   * response header.\n   *\n   * The result of this method depends on the current application\n   * environment, the client-side usually handles cookie processing\n   * automatically, leading this method returning `false`.\n   *\n   * At the client-side, the method tests whether the client has cookies\n   * enabled (which results in cookies being automatically processed by the\n   * browser), and returns `true` or `false` accordingly.\n   *\n   * @return {boolean} `true` if cookies are not processed automatically by\n   *         the environment and have to be handled manually by parsing\n   *         response headers and setting request headers, otherwise `false`.\n   */\n\n\n  haveToSetCookiesManually() {\n    return !this._window.isClient();\n  }\n  /**\n   * Processes the response received from the server.\n   *\n   * @param {HttpProxy~RequestParams} requestParams The original request's\n   *        parameters.\n   * @param {Response} response The Fetch API's `Response` object representing\n   *        the server's response.\n   * @param {*} responseBody The server's response body.\n   * @return {HttpAgent~Response} The server's response along with all related\n   *         metadata.\n   */\n\n\n  _processResponse(requestParams, response, responseBody) {\n    if (response.ok) {\n      return {\n        status: response.status,\n        body: responseBody,\n        params: requestParams,\n        headers: this._headersToPlainObject(response.headers),\n        headersRaw: response.headers,\n        cached: false\n      };\n    } else {\n      throw new _GenericError2.default('The request failed', {\n        status: response.status,\n        body: responseBody\n      });\n    }\n  }\n  /**\n   * Converts the provided Fetch API's `Headers` object to a plain object.\n   *\n   * @param {Headers} headers The headers to convert.\n   * @return {Object.<string, string>} Converted headers.\n   */\n\n\n  _headersToPlainObject(headers) {\n    let plainHeaders = {};\n\n    if (headers.entries) {\n      for (let [key, value] of headers.entries()) {\n        plainHeaders[key] = value;\n      }\n    } else if (headers.forEach) {\n      /**\n       * Check for forEach() has to be here because in old Firefoxes (versions lower than 44) there is not\n       * possibility to iterate through all the headers - according to docs\n       * (https://developer.mozilla.org/en-US/docs/Web/API/Headers) where is \"entries(), keys(), values(), and support\n       * of for...of\" is supported from Firefox version 44\n       */\n      if (headers.getAll) {\n        /**\n         * @todo This branch should be removed with node-fetch release\n         *       2.0.0.\n         */\n        headers.forEach((_, headerName) => {\n          plainHeaders[headerName] = headers.getAll(headerName).join(', ');\n        });\n      } else if (headers.get) {\n        /**\n         * In case that Headers.getAll() from previous branch doesn't exist because it is obsolete and deprecated - in\n         * newer versions of the Fetch spec, Headers.getAll() has been deleted, and Headers.get() has been updated to\n         * fetch all header values instead of only the first one - according to docs\n         * (https://developer.mozilla.org/en-US/docs/Web/API/Headers/getAll)\n         */\n        headers.forEach((_, headerName) => {\n          plainHeaders[headerName] = headers.get(headerName);\n        });\n      } else {\n        /**\n         * @todo If Microsoft Edge supported headers.entries(), we'd remove\n         *       this branch.\n         */\n        headers.forEach((headerValue, headerName) => {\n          plainHeaders[headerName] = headerValue;\n        });\n      }\n    }\n\n    return plainHeaders;\n  }\n  /**\n   * Processes the provided Fetch API or internal error and creates an error\n   * to expose to the calling API.\n   *\n   * @param {Error} fetchError The internal error to process.\n   * @param {HttpProxy~RequestParams} requestParams An object representing the\n   *        complete request parameters used to create and send the HTTP\n   *        request.\n   * @return {GenericError} The error to provide to the calling API.\n   */\n\n\n  _processError(fetchError, requestParams) {\n    const errorParams = fetchError instanceof _GenericError2.default ? fetchError.getParams() : {};\n    return this._createError(fetchError, requestParams, errorParams.status || _StatusCode2.default.SERVER_ERROR, errorParams.body || null);\n  }\n  /**\n   * Creates an error that represents a failed HTTP request.\n   *\n   * @param {Error} cause The error's message.\n   * @param {HttpProxy~RequestParams} requestParams An object representing the\n   *        complete request parameters used to create and send the HTTP\n   *        request.\n   * @param {number} status Server's response HTTP status code.\n   * @param {*} responseBody The body of the server's response, if any.\n   * @return {GenericError} The error representing a failed HTTP request.\n   */\n\n\n  _createError(cause, requestParams, status, responseBody = null) {\n    return new _GenericError2.default(cause.message, this.getErrorParams(requestParams.method, requestParams.url, requestParams.data, requestParams.options, status, responseBody, cause));\n  }\n  /**\n   * Returns {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch window.fetch}\n   * compatible API to use, depending on the method being used at the server\n   * (polyfill) or client (native/polyfill) side.\n   *\n   * @return {function((string|Request), RequestInit=): Promise.<Response>} An\n   *         implementation of the Fetch API to use.\n   */\n\n\n  _getFetchApi() {\n    const fetch = 'node-fetch';\n    return this._window.isClient() ? this._window.getWindow().fetch : require(fetch);\n  }\n  /**\n   * Composes an object representing the HTTP request parameters from the\n   * provided arguments.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {string} url The URL to which the request should be sent.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to\n   *        send with the request.\n   * @param {HttpAgent~RequestOptions} options Optional request options.\n   * @return {HttpProxy~RequestParams} An object\n   *         representing the complete request parameters used to create and\n   *         send the HTTP request.\n   */\n\n\n  _composeRequestParams(method, url, data, options) {\n    return {\n      method,\n      url,\n      transformedUrl: this._transformer.transform(url),\n      data,\n      options\n    };\n  }\n  /**\n   * Composes an init object, which can be used as a second argument of\n   * `window.fetch` method.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {HttpAgent~RequestOptions} options Options provided by the HTTP\n   *        agent.\n   * @return {RequestInit} A `RequestInit` object of the Fetch API.\n   */\n\n\n  _composeRequestInit(method, data, options) {\n    options.headers['Content-Type'] = this._getContentType(method, data, options);\n\n    for (let [headerName, headerValue] of this._defaultHeaders) {\n      options.headers[headerName] = headerValue;\n    }\n\n    let requestInit = {\n      method: method.toUpperCase(),\n      headers: options.headers,\n      credentials: options.withCredentials ? 'include' : 'same-origin',\n      redirect: 'follow'\n    };\n\n    if (this._shouldRequestHaveBody(method, data)) {\n      requestInit.body = this._transformRequestBody(data, options.headers);\n    }\n\n    Object.assign(requestInit, options.fetchOptions || {});\n    return requestInit;\n  }\n  /**\n   * Gets a `Content-Type` header value for defined method, data and options.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {HttpAgent~RequestOptions} options Options provided by the HTTP\n   *        agent.\n   * @return {string} A `Content-Type` header value.\n   */\n\n\n  _getContentType(method, data, options) {\n    if (options.headers['Content-Type']) {\n      return options.headers['Content-Type'];\n    }\n\n    if (this._shouldRequestHaveBody(method, data)) {\n      return 'application/json';\n    }\n\n    return '';\n  }\n  /**\n   * Transforms the provided URL using the current URL transformer and adds\n   * the provided data to the URL's query string.\n   *\n   * @param {string} url The URL to prepare for use with the fetch API.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to be\n   *        attached to the query string.\n   * @return {string} The transformed URL with the provided data attached to\n   *         its query string.\n   */\n\n\n  _composeRequestUrl(url, data) {\n    const transformedUrl = this._transformer.transform(url);\n\n    const queryString = this._convertObjectToQueryString(data || {});\n\n    const delimeter = queryString ? transformedUrl.includes('?') ? '&' : '?' : '';\n    return `${transformedUrl}${delimeter}${queryString}`;\n  }\n  /**\n   * Checks if a request should have a body (`GET` and `HEAD` requests don't\n   * have a body).\n   *\n   * @param {string} method The HTTP method.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @return {boolean} `true` if a request has a body, otherwise `false`.\n   */\n\n\n  _shouldRequestHaveBody(method, data) {\n    return ['get', 'head'].indexOf(method.toLowerCase()) === -1 && data;\n  }\n  /**\n   * Formats request body according to request headers.\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {Object.<string, string>} headers Headers object from options provided by the HTTP\n   *        agent.\n   * @returns {string|Object|FormData}\n   * @private\n   */\n\n\n  _transformRequestBody(data, headers) {\n    switch (headers['Content-Type']) {\n      case 'application/json':\n        return JSON.stringify(data);\n\n      case 'application/x-www-form-urlencoded':\n        return this._convertObjectToQueryString(data);\n\n      case 'multipart/form-data':\n        return this._convertObjectToFormData(data);\n\n      default:\n        return data;\n    }\n  }\n  /**\n   * Returns query string representation of the data parameter.\n   * (Returned string does not contain ? at the beginning)\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} object The object to be converted\n   * @returns {string} Query string representation of the given object\n   * @private\n   */\n\n\n  _convertObjectToQueryString(object) {\n    return Object.keys(object).map(key => [key, object[key]].map(encodeURIComponent).join('=')).join('&');\n  }\n  /**\n   * Converts given data to FormData object.\n   * If FormData object is not supported by the browser the original object is returned.\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} object The object to be converted\n   * @returns {Object|FormData}\n   * @private\n   */\n\n\n  _convertObjectToFormData(object) {\n    const window = this._window.getWindow();\n\n    if (!window || !window.FormData) {\n      return object;\n    }\n\n    const formDataObject = new FormData();\n    Object.keys(object).forEach(key => formDataObject.append(key, object[key]));\n    return formDataObject;\n  }\n\n}\n\nexports.default = HttpProxy;\n\ntypeof $IMA !== 'undefined' && $IMA !== null && $IMA.Loader && $IMA.Loader.register('ima/http/HttpProxy', [], function (_export, _context) {\n 'use strict';\n return {\n   setters: [],\n   execute: function () {\n     _export('default', exports.default);\n   }\n };\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/ima/http/HttpProxy.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}}],"sources":{"../node_modules/ima/http/HttpProxy.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _StatusCode = require(\"./StatusCode\");\n\nvar _StatusCode2 = _interopRequireDefault(_StatusCode);\n\nvar _GenericError = require(\"../error/GenericError\");\n\nvar _GenericError2 = _interopRequireDefault(_GenericError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * An object representing the complete request parameters used to create and\n * send the HTTP request.\n * @typedef {Object} HttpProxy~RequestParams\n * @property {string} method The HTTP method.\n * @property {string} url The original URL to which to make the request.\n * @property {string} transformedUrl The actual URL to which to make the\n *           request, created by applying the URL transformer to the\n *           original URL.\n * @property {Object<string, (boolean|number|string|Date)>} data The request\n *           data, sent as query or body.\n * @property {HttpAgent~RequestOptions} options The high-level request options\n *           provided by the HTTP agent.\n */\n\n/**\n * An object that describes a failed HTTP request, providing\n * information about both the failure reported by the server and how the\n * request has been sent to the server.\n * @typedef {Object} HttpProxy~ErrorParams\n * @property {string} errorName An error name.\n * @property {number} status The HTTP response status code send by the\n *           server.\n * @property {object} body The body of HTTP error response (detailed\n *           information).\n * @property {Error} cause The low-level cause error.\n * @property {HttpProxy~RequestParams} params An object representing the\n *           complete request parameters used to create and send the HTTP\n *           request.\n */\n\n/**\n * Middleware proxy between {@link HttpAgent} implementations and the\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API Fetch API},\n * providing a Promise-oriented API for sending requests.\n */\nclass HttpProxy {\n  /**\n   * Initializes the HTTP proxy.\n   *\n   * @param {UrlTransformer} transformer A transformer of URLs to which\n   *        requests are made.\n   * @param {Window} window Helper for manipulating the global object `window`\n   *        regardless of the client/server-side environment.\n   */\n  constructor(transformer, window) {\n    /**\n     * A transformer of URLs to which requests are made.\n     *\n     * @type {UrlTransformer}\n     */\n    this._transformer = transformer;\n    /**\n     * Helper for manipulating the global object `window` regardless of the\n     * client/server-side environment.\n     *\n     * @type {Window}\n     */\n\n    this._window = window;\n    /**\n     * The default HTTP headers to include with the HTTP requests, unless\n     * overridden.\n     *\n     * @type {Map<string, string>}\n     */\n\n    this._defaultHeaders = new Map();\n  }\n  /**\n   * Executes a HTTP request to the specified URL using the specified HTTP\n   * method, carrying the provided data.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {string} url The URL to which the request should be made.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to\n   *        be send to the server. The data will be included as query\n   *        parameters if the request method is `GET` or `HEAD`, and as\n   *        a request body for any other request method.\n   * @param {HttpAgent~RequestOptions=} options Optional request options.\n   * @return {Promise.<HttpAgent~Response>} A promise that resolves to the server\n   *         response.\n   */\n\n\n  request(method, url, data, options) {\n    const requestParams = this._composeRequestParams(method, url, data, options);\n\n    return new Promise((resolve, reject) => {\n      let requestTimeoutId;\n\n      if (options.timeout) {\n        requestTimeoutId = setTimeout(() => {\n          reject(new _GenericError2.default('The HTTP request timed out', {\n            status: _StatusCode2.default.TIMEOUT\n          }));\n        }, options.timeout);\n      }\n\n      const fetch = this._getFetchApi();\n\n      fetch(this._composeRequestUrl(url, !this._shouldRequestHaveBody(method, data) ? data : {}), this._composeRequestInit(method, data, options)).then(response => {\n        if (requestTimeoutId) {\n          clearTimeout(requestTimeoutId);\n        }\n\n        const contentType = response.headers.get('content-type');\n\n        if (response.status === _StatusCode2.default.NO_CONTENT) {\n          return Promise.resolve([response, null]);\n        } else if (contentType && contentType.includes('application/json')) {\n          return response.json().then(body => [response, body]);\n        } else {\n          return response.text().then(body => [response, body]);\n        }\n      }).then(([response, responseBody]) => this._processResponse(requestParams, response, responseBody)).then(resolve, reject);\n    }).catch(fetchError => {\n      throw this._processError(fetchError, requestParams);\n    });\n  }\n  /**\n   * Sets the specified default HTTP header. The header will be sent with all\n   * subsequent HTTP requests unless reconfigured using this method,\n   * overridden by request options, or cleared by\n   * {@link HttpProxy#clearDefaultHeaders} method.\n   *\n   * @param {string} header A header name.\n   * @param {string} value A header value.\n   */\n\n\n  setDefaultHeader(header, value) {\n    this._defaultHeaders.set(header, value);\n  }\n  /**\n   * Clears all defaults headers sent with all requests.\n   */\n\n\n  clearDefaultHeaders() {\n    this._defaultHeaders.clear();\n  }\n  /**\n   * Gets an object that describes a failed HTTP request, providing\n   * information about both the failure reported by the server and how the\n   * request has been sent to the server.\n   *\n   * @param {string} method The HTTP method used to make the request.\n   * @param {string} url The URL to which the request has been made.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data sent\n   *        with the request.\n   * @param {HttpAgent~RequestOptions} options Optional request options.\n   * @param {number} status The HTTP response status code send by the server.\n   * @param {object} body The body of HTTP error response (detailed\n   *        information).\n   * @param {Error} cause The low-level cause error.\n   * @return {HttpProxy~ErrorParams} An object containing both the details of\n   *         the error and the request that lead to it.\n   */\n\n\n  getErrorParams(method, url, data, options, status, body, cause) {\n    let params = this._composeRequestParams(method, url, data, options);\n\n    if (typeof body === 'undefined') {\n      body = {};\n    }\n\n    let error = {\n      status,\n      body,\n      cause\n    };\n\n    switch (status) {\n      case _StatusCode2.default.TIMEOUT:\n        error.errorName = 'Timeout';\n        break;\n\n      case _StatusCode2.default.BAD_REQUEST:\n        error.errorName = 'Bad Request';\n        break;\n\n      case _StatusCode2.default.UNAUTHORIZED:\n        error.errorName = 'Unauthorized';\n        break;\n\n      case _StatusCode2.default.FORBIDDEN:\n        error.errorName = 'Forbidden';\n        break;\n\n      case _StatusCode2.default.NOT_FOUND:\n        error.errorName = 'Not Found';\n        break;\n\n      case _StatusCode2.default.SERVER_ERROR:\n        error.errorName = 'Internal Server Error';\n        break;\n\n      default:\n        error.errorName = 'Unknown';\n        break;\n    }\n\n    return Object.assign(error, params);\n  }\n  /**\n   * Returns `true` if cookies have to be processed manually by setting\n   * `Cookie` HTTP header on requests and parsing the `Set-Cookie` HTTP\n   * response header.\n   *\n   * The result of this method depends on the current application\n   * environment, the client-side usually handles cookie processing\n   * automatically, leading this method returning `false`.\n   *\n   * At the client-side, the method tests whether the client has cookies\n   * enabled (which results in cookies being automatically processed by the\n   * browser), and returns `true` or `false` accordingly.\n   *\n   * @return {boolean} `true` if cookies are not processed automatically by\n   *         the environment and have to be handled manually by parsing\n   *         response headers and setting request headers, otherwise `false`.\n   */\n\n\n  haveToSetCookiesManually() {\n    return !this._window.isClient();\n  }\n  /**\n   * Processes the response received from the server.\n   *\n   * @param {HttpProxy~RequestParams} requestParams The original request's\n   *        parameters.\n   * @param {Response} response The Fetch API's `Response` object representing\n   *        the server's response.\n   * @param {*} responseBody The server's response body.\n   * @return {HttpAgent~Response} The server's response along with all related\n   *         metadata.\n   */\n\n\n  _processResponse(requestParams, response, responseBody) {\n    if (response.ok) {\n      return {\n        status: response.status,\n        body: responseBody,\n        params: requestParams,\n        headers: this._headersToPlainObject(response.headers),\n        headersRaw: response.headers,\n        cached: false\n      };\n    } else {\n      throw new _GenericError2.default('The request failed', {\n        status: response.status,\n        body: responseBody\n      });\n    }\n  }\n  /**\n   * Converts the provided Fetch API's `Headers` object to a plain object.\n   *\n   * @param {Headers} headers The headers to convert.\n   * @return {Object.<string, string>} Converted headers.\n   */\n\n\n  _headersToPlainObject(headers) {\n    let plainHeaders = {};\n\n    if (headers.entries) {\n      for (let [key, value] of headers.entries()) {\n        plainHeaders[key] = value;\n      }\n    } else if (headers.forEach) {\n      /**\n       * Check for forEach() has to be here because in old Firefoxes (versions lower than 44) there is not\n       * possibility to iterate through all the headers - according to docs\n       * (https://developer.mozilla.org/en-US/docs/Web/API/Headers) where is \"entries(), keys(), values(), and support\n       * of for...of\" is supported from Firefox version 44\n       */\n      if (headers.getAll) {\n        /**\n         * @todo This branch should be removed with node-fetch release\n         *       2.0.0.\n         */\n        headers.forEach((_, headerName) => {\n          plainHeaders[headerName] = headers.getAll(headerName).join(', ');\n        });\n      } else if (headers.get) {\n        /**\n         * In case that Headers.getAll() from previous branch doesn't exist because it is obsolete and deprecated - in\n         * newer versions of the Fetch spec, Headers.getAll() has been deleted, and Headers.get() has been updated to\n         * fetch all header values instead of only the first one - according to docs\n         * (https://developer.mozilla.org/en-US/docs/Web/API/Headers/getAll)\n         */\n        headers.forEach((_, headerName) => {\n          plainHeaders[headerName] = headers.get(headerName);\n        });\n      } else {\n        /**\n         * @todo If Microsoft Edge supported headers.entries(), we'd remove\n         *       this branch.\n         */\n        headers.forEach((headerValue, headerName) => {\n          plainHeaders[headerName] = headerValue;\n        });\n      }\n    }\n\n    return plainHeaders;\n  }\n  /**\n   * Processes the provided Fetch API or internal error and creates an error\n   * to expose to the calling API.\n   *\n   * @param {Error} fetchError The internal error to process.\n   * @param {HttpProxy~RequestParams} requestParams An object representing the\n   *        complete request parameters used to create and send the HTTP\n   *        request.\n   * @return {GenericError} The error to provide to the calling API.\n   */\n\n\n  _processError(fetchError, requestParams) {\n    const errorParams = fetchError instanceof _GenericError2.default ? fetchError.getParams() : {};\n    return this._createError(fetchError, requestParams, errorParams.status || _StatusCode2.default.SERVER_ERROR, errorParams.body || null);\n  }\n  /**\n   * Creates an error that represents a failed HTTP request.\n   *\n   * @param {Error} cause The error's message.\n   * @param {HttpProxy~RequestParams} requestParams An object representing the\n   *        complete request parameters used to create and send the HTTP\n   *        request.\n   * @param {number} status Server's response HTTP status code.\n   * @param {*} responseBody The body of the server's response, if any.\n   * @return {GenericError} The error representing a failed HTTP request.\n   */\n\n\n  _createError(cause, requestParams, status, responseBody = null) {\n    return new _GenericError2.default(cause.message, this.getErrorParams(requestParams.method, requestParams.url, requestParams.data, requestParams.options, status, responseBody, cause));\n  }\n  /**\n   * Returns {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch window.fetch}\n   * compatible API to use, depending on the method being used at the server\n   * (polyfill) or client (native/polyfill) side.\n   *\n   * @return {function((string|Request), RequestInit=): Promise.<Response>} An\n   *         implementation of the Fetch API to use.\n   */\n\n\n  _getFetchApi() {\n    const fetch = 'node-fetch';\n    return this._window.isClient() ? this._window.getWindow().fetch : require(fetch);\n  }\n  /**\n   * Composes an object representing the HTTP request parameters from the\n   * provided arguments.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {string} url The URL to which the request should be sent.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to\n   *        send with the request.\n   * @param {HttpAgent~RequestOptions} options Optional request options.\n   * @return {HttpProxy~RequestParams} An object\n   *         representing the complete request parameters used to create and\n   *         send the HTTP request.\n   */\n\n\n  _composeRequestParams(method, url, data, options) {\n    return {\n      method,\n      url,\n      transformedUrl: this._transformer.transform(url),\n      data,\n      options\n    };\n  }\n  /**\n   * Composes an init object, which can be used as a second argument of\n   * `window.fetch` method.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {HttpAgent~RequestOptions} options Options provided by the HTTP\n   *        agent.\n   * @return {RequestInit} A `RequestInit` object of the Fetch API.\n   */\n\n\n  _composeRequestInit(method, data, options) {\n    options.headers['Content-Type'] = this._getContentType(method, data, options);\n\n    for (let [headerName, headerValue] of this._defaultHeaders) {\n      options.headers[headerName] = headerValue;\n    }\n\n    let requestInit = {\n      method: method.toUpperCase(),\n      headers: options.headers,\n      credentials: options.withCredentials ? 'include' : 'same-origin',\n      redirect: 'follow'\n    };\n\n    if (this._shouldRequestHaveBody(method, data)) {\n      requestInit.body = this._transformRequestBody(data, options.headers);\n    }\n\n    Object.assign(requestInit, options.fetchOptions || {});\n    return requestInit;\n  }\n  /**\n   * Gets a `Content-Type` header value for defined method, data and options.\n   *\n   * @param {string} method The HTTP method to use.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {HttpAgent~RequestOptions} options Options provided by the HTTP\n   *        agent.\n   * @return {string} A `Content-Type` header value.\n   */\n\n\n  _getContentType(method, data, options) {\n    if (options.headers['Content-Type']) {\n      return options.headers['Content-Type'];\n    }\n\n    if (this._shouldRequestHaveBody(method, data)) {\n      return 'application/json';\n    }\n\n    return '';\n  }\n  /**\n   * Transforms the provided URL using the current URL transformer and adds\n   * the provided data to the URL's query string.\n   *\n   * @param {string} url The URL to prepare for use with the fetch API.\n   * @param {Object<string, (boolean|number|string|Date)>} data The data to be\n   *        attached to the query string.\n   * @return {string} The transformed URL with the provided data attached to\n   *         its query string.\n   */\n\n\n  _composeRequestUrl(url, data) {\n    const transformedUrl = this._transformer.transform(url);\n\n    const queryString = this._convertObjectToQueryString(data || {});\n\n    const delimeter = queryString ? transformedUrl.includes('?') ? '&' : '?' : '';\n    return `${transformedUrl}${delimeter}${queryString}`;\n  }\n  /**\n   * Checks if a request should have a body (`GET` and `HEAD` requests don't\n   * have a body).\n   *\n   * @param {string} method The HTTP method.\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @return {boolean} `true` if a request has a body, otherwise `false`.\n   */\n\n\n  _shouldRequestHaveBody(method, data) {\n    return ['get', 'head'].indexOf(method.toLowerCase()) === -1 && data;\n  }\n  /**\n   * Formats request body according to request headers.\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} data The data to\n   *        be send with a request.\n   * @param {Object.<string, string>} headers Headers object from options provided by the HTTP\n   *        agent.\n   * @returns {string|Object|FormData}\n   * @private\n   */\n\n\n  _transformRequestBody(data, headers) {\n    switch (headers['Content-Type']) {\n      case 'application/json':\n        return JSON.stringify(data);\n\n      case 'application/x-www-form-urlencoded':\n        return this._convertObjectToQueryString(data);\n\n      case 'multipart/form-data':\n        return this._convertObjectToFormData(data);\n\n      default:\n        return data;\n    }\n  }\n  /**\n   * Returns query string representation of the data parameter.\n   * (Returned string does not contain ? at the beginning)\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} object The object to be converted\n   * @returns {string} Query string representation of the given object\n   * @private\n   */\n\n\n  _convertObjectToQueryString(object) {\n    return Object.keys(object).map(key => [key, object[key]].map(encodeURIComponent).join('=')).join('&');\n  }\n  /**\n   * Converts given data to FormData object.\n   * If FormData object is not supported by the browser the original object is returned.\n   *\n   * @param {Object.<string, (boolean|number|string|Date)>} object The object to be converted\n   * @returns {Object|FormData}\n   * @private\n   */\n\n\n  _convertObjectToFormData(object) {\n    const window = this._window.getWindow();\n\n    if (!window || !window.FormData) {\n      return object;\n    }\n\n    const formDataObject = new FormData();\n    Object.keys(object).forEach(key => formDataObject.append(key, object[key]));\n    return formDataObject;\n  }\n\n}\n\nexports.default = HttpProxy;\n\ntypeof $IMA !== 'undefined' && $IMA !== null && $IMA.Loader && $IMA.Loader.register('ima/http/HttpProxy', [], function (_export, _context) {\n 'use strict';\n return {\n   setters: [],\n   execute: function () {\n     _export('default', exports.default);\n   }\n };\n});\n"},"lineCount":564}},"error":null,"hash":"67c541918009dfefbff7fe5bb9351d37","cacheData":{"env":{}}}